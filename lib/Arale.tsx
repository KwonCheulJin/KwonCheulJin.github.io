/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'
import { useFrame } from '@react-three/fiber';

type GLTFResult = GLTF & {
  nodes: {
    평면: THREE.Mesh
    arale: THREE.Mesh
  }
  materials: {
    매테리얼: THREE.MeshStandardMaterial
    ['palette.002']: THREE.MeshStandardMaterial
  }
}

export default function Model({ ...props }: JSX.IntrinsicElements['group']) {
  const group = useRef<THREE.Group>()
  useFrame( ({clock}) => {
    const refGroup = group.current;
    refGroup.rotation.y = clock.getElapsedTime()
  })
  const { nodes, materials } = useGLTF('/arale.glb') as GLTFResult
  return (
    <group ref={group} {...props} dispose={null}>
      <mesh geometry={nodes.평면.geometry} material={materials.매테리얼} position={[-0.68, -0.01, -3.29]} scale={[0, 1, 6.19]} />
      <mesh geometry={nodes.arale.geometry} material={materials['palette.002']} rotation={[Math.PI / 2, 0, 0]} />
    </group>
  )
}

useGLTF.preload('/arale.glb')
